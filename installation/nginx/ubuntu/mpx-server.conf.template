upstream mpx_servers {
    least_conn;
    server 127.0.0.1:30000 max_fails=3 fail_timeout=3s;
    server 127.0.0.1:30001 max_fails=3 fail_timeout=3s;
    keepalive 16;
}

server {
    listen 80;
    #-- Change {your-mpx-server-dns} with your DNS domain name --#
    server_name {your-mpx-server-dns};

    #-- Note: Don't block curl --# 
    if ($http_user_agent ~* LWP::Simple|wget|Go-http-client|python-urllib|GensysInspect|Custom-AsyncHttpClient|Bytespider|zgrab|NetcraftSurveyAgent|paloaltonetworks|HUAWEI) {
        return 404;
    }

    add_header Allow "GET, POST, HEAD" always;
    if ( $request_method !~ ^(GET|POST|HEAD)$ ) {
        return 405;
    }

    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header Connection "";
    proxy_connect_timeout 90;
    proxy_send_timeout 90;
    proxy_read_timeout 90;
    server_tokens off;

    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl;
    http2 on;
    #-- Change {your-mpx-server-dns} with your DNS domain name --#
    server_name {your-mpx-server-dns};

    #-- Note: Don't block curl --# 
    if ($http_user_agent ~* LWP::Simple|wget|Go-http-client|python-urllib|GensysInspect|Custom-AsyncHttpClient|Bytespider|zgrab|NetcraftSurveyAgent|paloaltonetworks|HUAWEI) {
        return 404;
    }

    client_header_buffer_size 64k;
    client_body_buffer_size 64k;
    client_max_body_size 10M;
    large_client_header_buffers 2 64k;
    server_tokens off;

    access_log   /var/log/nginx/mpx-access.log  main;
    ssl_certificate "/etc/ssl/certs/mpx-server.crt";
    ssl_certificate_key "/etc/ssl/private/mpx-server.key";  
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout  10m;
    ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384 EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA !RC4 !SHA1 !SHA256 !SHA384 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
    ssl_prefer_server_ciphers on;
    
    # Configuring HSTS in Nginx
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Allow "GET, POST, HEAD" always;
    if ( $request_method !~ ^(GET|POST|HEAD)$ ) {
        return 405;
    }

    # Further secure Nginx 
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options nosniff;
    add_header X-Permitted-Cross-Domain-Policies master-only;

    location / {
        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header Connection "";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_connect_timeout 90;
        proxy_send_timeout 90;
        proxy_read_timeout 90;
        proxy_pass http://mpx_servers;
    }

    location ^~ /package.json {
        return 404;
    }

    location ^~ /package-lock.json {
        return 404;
    }

    location ^~ /mail-worker.js {
        return 404;
    }

    location ^~ /lib {
	deny all;
    }

    location ^~ /node_modules {
	deny all;
    }
}

